apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.xxxifan'

android {
    compileSdkVersion sdk as int
    buildToolsVersion buildTools as String

    defaultConfig {
        minSdkVersion minSdk as int
        targetSdkVersion sdk as int
        versionCode 16082718
        versionName "0.4.6"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // you may need to add following to your main project
    // multiDexEnabled true

//    defaultConfig.ndk {
//        abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
//    }

    android {
        lintOptions {
            abortOnError false
        }
        packagingOptions {
            exclude 'LICENSE.txt'
            exclude 'META-INF/maven/com.google.dagger/dagger/pom.xml'
            exclude 'META-INF/maven/com.google.dagger/dagger/pom.properties'
        }
    }
}

def support_lib = "24.2.1"
def okhttp = "3.4.1"
def retrofit = "2.1.0"

dependencies {
    testCompile 'junit:junit:4.12'

    compile "com.android.support:design:${support_lib}"
    /*
     * Network/Loaders
     */
    compile "com.squareup.okhttp3:okhttp:${okhttp}"
    compile "com.squareup.okhttp3:logging-interceptor:${okhttp}"
    compile "com.squareup.retrofit2:retrofit:${retrofit}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofit}"
    compile "com.squareup.retrofit2:converter-gson:${retrofit}"
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    compile 'com.liulishuo.filedownloader:library:1.0.2'

    /*
     * Rx
     */
    compile 'io.reactivex:rxjava:1.1.10'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.trello:rxlifecycle:0.7.0'
    compile 'com.trello:rxlifecycle-android:0.7.0'
    compile 'com.jakewharton.rxrelay:rxrelay:1.1.0'
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.7.0@aar'
    compile "com.github.VictorAlbertos:RxActivityResult:0.3.5"

    /*
     * Tools
     */
    compile 'com.jakewharton:butterknife:8.4.0'
    compile 'com.afollestad.material-dialogs:core:0.8.6.2'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.github.tianzhijiexian:CommonAdapter:1.1.9'
    compile 'com.orhanobut:logger:1.15'
    compile 'top.zibin:Luban:1.0.7'

    /*
     * Optional
     */
    compile 'jp.wasabeef:glide-transformations:2.0.1'
    compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.3.0'
    compile 'com.amitshekhar.android:glide-bitmap-pool:0.0.1'

    /*
     * apt needed
     *
     * apply plugin: 'com.neenbedankt.android-apt'
     * apt 'com.jakewharton:butterknife-compiler:8.4.0'
     */
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// uncomment to build a jar file in addition to the default aar file
//android.libraryVariants.all { variant ->
//    def name = variant.buildType.name
//    def task = project.tasks.create "jar${name.capitalize()}", Jar
//    task.dependsOn variant.javaCompile
//    task.from variant.javaCompile.destinationDir
//    artifacts.add('archives', task);
//}
